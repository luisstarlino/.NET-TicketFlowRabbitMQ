version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-ticketflow
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ticketflow-net

  db:
    image: postgres:13
    container_name: db-ticketflow
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ticketflow
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ticketflow-net

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-ticketflow
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__DefaultConnection: "Host=db;Database=ticketflow;Username=user;Password=password"
      RabbitMQ__HostName: "rabbitmq"
      RabbitMQ__UserName: "user"
      RabbitMQ__Password: "password"
    ports:
      - "8080:8080"
    networks:
      - ticketflow-net

volumes:
  rabbitmq_data:
  db_data:

networks:
  ticketflow-net:
    driver: bridge
